<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
 	
	<!-- kafka消息发送模板对象 -->
	<bean id="busKafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg>
			<bean class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
				<constructor-arg>
					<map>
						<entry key="bootstrap.servers" value="${bootstrap.servers}" />
						<entry key="key.serializer"
							value="org.apache.kafka.common.serialization.StringSerializer" />
						<entry key="value.serializer"
							value="org.apache.kafka.common.serialization.ByteArraySerializer" />
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<!-- Kafka消息生产者 -->
	<bean id="kafkaMessageProducer"
		class="com.hunger.sample.springmq.kafka.producer.KafkaMessageProducer">
		<property name="kafkaTemplate" ref="busKafkaTemplate" />
	</bean>

	<!-- 队列消息ConsumerFactory -->
	<bean id="kafkaQueueMessageConsumerFactory"
		class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="${bootstrap.servers}" />
				<entry key="group.id" value="${queue.group.id}" />
				<entry key="key.deserializer"
					value="org.apache.kafka.common.serialization.StringDeserializer" />
				<entry key="value.deserializer"
					value="org.apache.kafka.common.serialization.ByteArrayDeserializer" />
				<entry key="enable.auto.commit" value="false" />
				<entry key="request.timeout.ms" value="40000"></entry>
				<entry key="session.timeout.ms" value="30000"></entry>
				<entry key="heartbeat.interval.ms" value="10000"></entry>
			</map>
		</constructor-arg>
	</bean>

	<!-- 监听的队列 -->
	<bean id="kafkaQueueMessageTopics"
		class="com.hunger.sample.springmq.kafka.consumer.QueueMessageKafkaListenerTopic"></bean>

	<!-- Queue消息listener -->
	<bean id="kafkaQueueMessageListener"
		class="com.hunger.sample.springmq.kafka.consumer.QueueMessageKafkaListener"></bean>

	<!-- Queue消息容器配置 -->
	<bean id="kafkaQueueMessageContainerProperties"
		class="com.hunger.sample.springmq.kafka.consumer.KafkaContainerProperties">
		<constructor-arg index="0" ref="kafkaQueueMessageTopics">
		</constructor-arg>
		<property name="messageListener" ref="kafkaQueueMessageListener"></property>
	</bean>

	<!-- Queue消息listener容器 -->
	<bean id="kafkaQueueKafkaListenerContainer"
		class="org.springframework.kafka.listener.ConcurrentMessageListenerContainer">
		<constructor-arg index="0"
			ref="kafkaQueueMessageConsumerFactory" />
		<constructor-arg index="1"
			ref="kafkaQueueMessageContainerProperties" />
		<property name="concurrency" value="1"></property>
	</bean>


	<!-- 主题消息ConsumerFactory -->
	<bean id="kafkaTopicMessageConsumerFactory"
		class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="${bootstrap.servers}" />
				<entry key="group.id" value="${topic.group.id}" />
				<entry key="key.deserializer"
					value="org.apache.kafka.common.serialization.StringDeserializer" />
				<entry key="value.deserializer"
					value="org.apache.kafka.common.serialization.ByteArrayDeserializer" />
				<entry key="enable.auto.commit" value="false" />
				<entry key="request.timeout.ms" value="40000"></entry>
				<entry key="session.timeout.ms" value="30000"></entry>
				<entry key="heartbeat.interval.ms" value="10000"></entry>
			</map>
		</constructor-arg>
	</bean>

	<!-- 监听的topic消息 -->
	<bean id="kafkaTopicMessageTopics"
		class="com.hunger.sample.springmq.kafka.consumer.TopicMessageKafkaListenerTopic"></bean>

	<!-- topic消息listener -->
	<bean id="kafkaTopicMessageListener"
		class="com.hunger.sample.springmq.kafka.consumer.TopicMessageKafkaListener"></bean>

	<!-- topic消息容器配置 -->
	<bean id="kafkaTopicMessageContainerProperties"
		class="com.hunger.sample.springmq.kafka.consumer.KafkaContainerProperties">
		<constructor-arg index="0" ref="kafkaTopicMessageTopics">
		</constructor-arg>
		<property name="messageListener" ref="kafkaTopicMessageListener"></property>
	</bean>

	<!-- topic消息listener容器 -->
	<bean id="kafkaTopicKafkaListenerContainer"
		class="org.springframework.kafka.listener.ConcurrentMessageListenerContainer">
		<constructor-arg index="0"
			ref="kafkaTopicMessageConsumerFactory" />
		<constructor-arg index="1"
			ref="kafkaTopicMessageContainerProperties" />
		<property name="concurrency" value="1"></property>
	</bean>
</beans>